<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAACAkAAAJNU0Z0AUkBTAIBAQIB
        AAEgAQABIAEAARgBAAEYAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABYAMAARgDAAEBAQABIAYAASQa
        AANDAXcDUQG5A1EBuQNRAbkDUQG5A1EBuQNRAbkDUQG5A1EBuQNRAbkDUQG5A1EBuQNRAbkDUQG5A1EB
        uQNNAZkYAAMFAQYDAAH/AwAB/wMAAf8DHAEn/wARAAMyAeoDTwGfAx0BKQMdASkDHQEpAx0BKQMdASkD
        HQEpAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDOgFhAwAB/xQAA0kB1QMEAf4EAANHAdcD
        AAH/AxwBJ/8AEAAB/ycAAf8DMwHrAzsBYxAAA1EBwAMdASkQAAM4AeQDGAH3CAADRwHXAwAB/wMdASj/
        AAwAAf8kAANAAeADHAEnA0wBkwMAAf8DGAH2CAADUgGvAyQBNBAAAxIBGAMAAf8DRgHWCAADRwHXAwAB
        /wMcASf/AAgAAf8kAAM0AVMDUAGkAzkBXgMQAfoDQAFxAxgB9wQAA1IBrwMkATQUAAMdASgDAAH/A0YB
        1ggAA0cB1wMAAf8DHAEn/wAEAAH/KwAB/wMQAfoIAANAAXEDGAH2A1IBrwMkATQYAAMdASgDAAH/A0YB
        1ggAA0cB1wMAAf8DHQEo/wAB/wcAAf8DAAH/AwAB/wNNAZgDCwEOAz8BbgM/AW4DPwFuBAADKgHuA0oB
        iQwAA0ABcQMAAf8DJAE0HAADHQEoAwAB/wNGAdYIAANHAdcDAAH/AxwBJ/sAAf8EAAMhAfMEAAMqAUAD
        UAGhAwwBEANDAXYDQwF2A0MBdggAAyoB7gNKAYkMAANAAXEDGAH2IAADHQEoAwAB/wNHAdcIAANHAdcD
        AAH/AxwBJwQABAEDPgFqA1EBrQNSAa8DQwF2AwYBB9sAAf8EAAMhAfMEAAMqAUADUAGhAxkBIgNQAaYD
        UAGmA1ABpgNQAaYDPwFsBAADKgHuA0oBiQwAA0ABcQMYAfYgAAMdASgDAAH/A0cB1wgAA0cB1wMAAf8D
        FwH4AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwQB/gMbASXTAAH/BwAB/wMAAf8DAAH/A0oBjAMCAQMD
        KQE+AykBPgMpAT4DKQE+AxQBGwgAAyoB7gNKAYkMAANAAXEDGAH2IAADHQEoAwAB/wNGAdYEAAM3AVoD
        AAH/AxAB+gMYASEQAAMLAQ4DMgHqAwAB/wNNAZTPAAH/OAADKgHuA0oBiQgABAEDAAH/AxgB9yAAAx0B
        KAMAAf8DQgHdAwAB/wNRAacgAAM+AWsDAAH/A0QBeMsAAf8EAAMkAfEDJAHxAyQB8QM9AWkoAAMqAe4D
        SgGJBAEDAAH/Ax8BLANNAZYDRQF8IAADHQEoAwAB/wNNAc0oAANLAY4DAAH/AwIBA8cAAf8EAAMhAfME
        AAMqAUADUAGhAykBPgM5AeUDOQHlAzkB5QMEAQUYAAMoAe8DAAH/Ax8BLAQAAykBPgNSAawgAANIAYYD
        AAH/MwAB/wNOAcvHAAH/BAADIQHzBAADKgFAA1ABoQQBAyYBOAMmATgDJgE4AyYBOAMRARYUAANSAa8D
        CAH8A1IBrAMzAVADAAH/AwsBDiMAAf8DTwHBMAADRAF7AwAB/8cAAf8HAAH/AwAB/wMAAf8DUAGgAxsB
        JQNSAawDUgGsA1IBrANSAawDQQFyFAADUgGvAyUBNgM9AWkDUAGgAwoBDScAAf8DLgFIMAADBQEGAwAB
        /8cAAf9AAANSAa8DJQE2MwAB/wMVAR03AAH/xwAB/wQAA0gBhgNIAYYDSAGGAx0BKCwAA1IBrwMlATYz
        AAH/AykBPjAABAEDAAH/xwAB/wQAAxgB9wM5AV4DSAGGA1ABoQM9AWgDAAH/AwAB/wMAAf8DCQEMDAAD
        RgGBA1ABowNQAaMDPAHiAyUBNjMAAf8DUgGrMAADOwFlAwAB/8cAAf8EAAMhAfMEAAMqAUADUAGhHwAB
        /wNFAXwDKgFAA0oBjAMEAf40AANPAaIDAAH/CAADTwHBAz0B4xAAA08BnQMEAf4IAAMEAf4DOAHkxwAB
        /wQAAwgB/QNHAdcDPwHhA1ABoQM2AVcDAAH/AwAB/wMAAf8DAAH/A0wB0AMVAR0DTAHQBAADMAFMAwQB
        /j8AAf8DUAGgBAADFAEbAwAB/wMAAf8DIwHyAzgB5AMAAf8DAAH/AzoBYgQAAzcBWgMAAf8DDAEPxwAB
        /wQAAwsBDgMLAQ4DCwEOHAADHgEqA1EBuwMwAUwDBAH+QAADPQFpAwAB/wM7AWMIAANCAXQDOAHmAyQB
        8QNNAZcEAQQAAyMBMgMAAf8DUQGtywAB/ywAAx4BKgM2AecDBAH+SAADTgGbAwAB/wNHAdcEARQAA1EB
        swMAAf8DTQHNzAADJgE4AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/AwgB/VAAAyYBOAMAAf8DAAH/AwAB/wM/AeEDQgHdAwAB/wMAAf8DAAH/AzoBYv8AYQADHgEqA1IB
        rwMkAfEDHQH0A1EBvAMqAUDUAAFCAU0BPgcAAT4DAAEoAwABYAMAARgDAAEBAQABAQUAASABARYAA/8B
        AAHAAQABPwEHAv8GAAGAAQABHwEjAv8GAAG/AeMBzwExAv8GAAG/AeABzwEYAv8GAAG/AeABTwGMAX8B
        /wYAAb8B8wEPAcYBPwH/BgABoAETAY8B4wEfAf8GAAGoARkBzwHxAYgBHwYAAagBBAHnAfgBwAEHBgAB
        oAEGAXMB/AFDAcMGAAG/Af8BMQH+AQ8B8QYAAaEB/wGAAf8BHwH4BgABqAEPAcQB/wE/AfwGAAGoAQcB
        wAH/AT8B/AYAAaABBwHBAf8BPwH8BgABvwH/Ac8B/wE/Af4GAAGhAf8BzwH/AT8B/AYAAaABDgEPAf8B
        PwH8BgABqQH8AR8B/wEzAcwGAAGgAQEBPwH/AZABCAYAAaMB+AF/Af8BjAERBgABvwH4Av8BwwHjBgAB
        gAEBAv8B4AEHBgAE/wH4AR8GAAs=
</value>
  </data>
</root>